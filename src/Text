6. Система за отпуски
Създайте система, в която служителите на компания могат да заявяват отпуска.
 Системата да се реализира в конзола. При стартиране на програмата излиза следното меню:
--------------------------------------------------------------------
Заяви отпуска
Виж всички отпуски
Виж отпуска за служител
Промени статус на отпуска
Изход
-------------------------------------------------------------------
Въведи избор:

При избиране на 1, потребителят въвежда последователно
     Име, имейл, ЕГН, две дати - за начало и край на отпуската, тип на отпуската - платена или неплатена.
     При грешен формат на данните да излизат подходящи съобщения. КАК???
При избиране на 2, на екрана се показват във формата на таблица, всички         направени до сега заявки.
     Всички заявки се помнят при изключване на програмата.
При избиране на 3, потребителят въвежда името на служител и на екрана излиза таблица,
     но само със заявките за този служител.
Всички заявки да си имат уникален номер. Към таблиците от опция 2 и 3 да се добави и нова колона “Статус”.
     Статусът може да бъде approved, rejected or pending. При избиране на 4, излиза таблица подобна на опция 2,
     но с допълнителна колона - номер на заявката. Потребителят може да въведе номер на заявка и статус,
     което ще промени статуса на съответната заявка.


  /*try {
            File file = new File("C:\\newfile.txt");
            boolean isCreated = file.createNewFile();
            if (isCreated) {
                System.out.println("File has been created successfully");
            } else {
                System.out.println("File already present at the specified location");
            }
        } catch (IOException e) {
            System.out.println("Exception Occurred:");
            e.printStackTrace();
        }*/


        public static void main(String[] args) {
                ArrayList<String[]> gfg = new ArrayList<String[]>();
        //
        //        gfg.add(employee);
        //
        //      gfg.forEach(employee1 -> System.out.println(employee1));
            }

            public static void writeDataLineByLine(String filePath)
            {
                // first create file object for file placed at location
                // specified by filepath
                File file = new File(filePath);
                try {
                    // create FileWriter object with file as parameter
                    FileWriter outputfile = new FileWriter(file);

                    // create CSVWriter object filewriter object as parameter
                    CSVWriter writer = new CSVWriter(outputfile);

                    // adding header to csv
                    String[] header = { "Name", "Class", "Marks" };
                    writer.writeNext(header);

                    // add data to csv
                    String[] data1 = { "Aman", "10", "620" };
                    writer.writeNext(data1);
                    String[] data2 = { "Suraj", "10", "630" };
                    writer.writeNext(data2);

                    // closing writer connection
                    writer.close();
                }
                catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }


            https://www.baeldung.com/java-csv
